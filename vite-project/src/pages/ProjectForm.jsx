import React, { useState, useEffect } from 'react';
import axios from 'axios';

const ProjectForm = () => {
    const [title, setTitle] = useState('');
    const [content, setContent] = useState('');
    const [generatedBy, setGeneratedBy] = useState('');
    const [project, setProject] = useState('');
    const [priority, setPriority] = useState('Medium'); // Set default value to 'Medium'
    const [users, setUsers] = useState([]);
    const [projects, setProjects] = useState([]);

    useEffect(() => {
        const fetchOptions = async () => {
            try {
                const [usersRes, projectsRes] = await Promise.all([
                    axios.get('http://localhost:3000/users'),
                    axios.get('http://localhost:3000/projects')
                ]);

                const usersData = Array.isArray(usersRes.data) ? usersRes.data : [];
                const projectsData = Array.isArray(projectsRes.data) ? projectsRes.data : [];

                setUsers(usersData);
                setProjects(projectsData);
            } catch (err) {
                console.error(err);
                setUsers([]);
                setProjects([]);
            }
        };
        fetchOptions();
    }, []);

    const handleSubmit = async (e) => {
        e.preventDefault();
        try {
            const response = await fetch('http://localhost:3000/projects', {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('token')}`,  // Replace with your actual token
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    title,
                    content,
                    generatedBy,
                    project,
                    priority
                })
            });

            console.log('Project added:', response.data);
        } catch (err) {
            console.error('Error adding project:', err);
        }
    };

    return (
        <form onSubmit={handleSubmit}>
            <div>
                <label htmlFor="title">Title</label>
                <input
                    id="title"
                    type="text"
                    value={title}
                    onChange={(e) => setTitle(e.target.value)}
                />
            </div>
            <div>
                <label htmlFor="content">Content</label>
                <textarea
                    id="content"
                    value={content}
                    onChange={(e) => setContent(e.target.value)}
                />
            </div>
            <div>
                <label htmlFor="generatedBy">Generated By</label>
                <select
                    id="generatedBy"
                    value={generatedBy}
                    onChange={(e) => setGeneratedBy(e.target.value)}
                >
                    <option value="">Select User</option>
                    {users && Array.isArray(users) && users.map((user) => (
                        <option key={user._id} value={user._id}>
                            {user.name}
                        </option>
                    ))}
                    <option value="shashwat">
                        Shashwat
                    </option>
                </select>
            </div>
            <div>
                <label htmlFor="project">Project</label>
                <select
                    id="project"
                    value={project}
                    onChange={(e) => setProject(e.target.value)}
                >
                    <option value="">Select Project</option>
                    {projects.map((project) => (
                        <option key={project._id} value={project._id}>
                            {project.title}
                        </option>
                    ))}
                    <option value="hackathon">Hackathon</option>
                </select>
            </div>
            <div>
                <label htmlFor="priority">Priority</label>
                <select
                    id="priority"
                    value={priority}
                    onChange={(e) => setPriority(e.target.value)}
                >
                    <option value="Low">Low</option>
                    <option value="Medium">Medium</option>
                    <option value="High">High</option>
                </select>
            </div>
            <button type="submit">Add Project</button>
        </form>
    );
};

export default ProjectForm;
